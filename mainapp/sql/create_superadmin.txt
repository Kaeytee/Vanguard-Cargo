# =====================================================
# SUPABASE SUPERADMIN USER CREATION SCRIPT
# =====================================================
# SECURITY WARNING: This file contains API endpoints that require
# your actual Supabase service role key. Never commit real keys to git!
# 
# SETUP INSTRUCTIONS:
# 1. Get your service role key from Supabase Dashboard > Settings > API
# 2. Replace YOUR_SUPABASE_SERVICE_ROLE_KEY with your actual key
# 3. Replace YOUR_SUPABASE_PROJECT_URL with your project URL
# 4. Run this script in a secure environment only
# =====================================================

# Step 1: Create auth user
# IMPORTANT: Replace placeholders with your actual Supabase credentials
curl -X POST "YOUR_SUPABASE_PROJECT_URL/auth/v1/admin/users" \
  -H "Authorization: Bearer YOUR_SUPABASE_SERVICE_ROLE_KEY" \
  -H "Content-Type: application/json" \
  -H "apikey: YOUR_SUPABASE_SERVICE_ROLE_KEY" \
  -d '{
    "email": "admin@vanguardcargo.co",
    "password": "VanguardAdmin2024!",
    "email_confirm": true,
    "user_metadata": {
      "first_name": "Admin",
      "last_name": "User"
    }
  }'


# Step 2: Create profile (use the ID returned from step 1)
# IMPORTANT: Replace USER_ID_FROM_STEP_1 with the actual user ID returned above
curl -X POST "YOUR_SUPABASE_PROJECT_URL/rest/v1/users" \
  -H "Authorization: Bearer YOUR_SUPABASE_SERVICE_ROLE_KEY" \
  -H "Content-Type: application/json" \
  -H "apikey: YOUR_SUPABASE_SERVICE_ROLE_KEY" \
  -H "Prefer: return=representation" \
  -d '{
    "id": "USER_ID_FROM_STEP_1",
    "email": "admin@vanguardcargo.co",
    "first_name": "Admin",
    "last_name": "User",
    "role": "superadmin",
    "status": "active",
    "email_verified": true
  }'

# =====================================================
# SECURITY REMINDERS:
# =====================================================
# 1. Never commit this file with real credentials to version control
# 2. Use environment variables in production environments
# 3. Rotate service keys regularly
# 4. Monitor API usage for unauthorized access
# 5. Delete this file after use or store securely
# =====================================================