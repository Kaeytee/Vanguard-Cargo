/**
 * Country Selector Component
 * Provides a dropdown interface for selecting countries with flags
 * Used in registration and other forms for better UX
 * 
 * @author Senior Software Engineer
 * @version 1.0.0
 */

import React, { useState, useEffect } from 'react';
import { ChevronDown } from 'lucide-react';
import { cn } from '../lib/utils';

// Country codes for the dropdown selector with flags and phone codes
const COUNTRY_CODES = [
  { code: '+233', country: 'Ghana', flag: 'ðŸ‡¬ðŸ‡­' },
  { code: '+234', country: 'Nigeria', flag: 'ðŸ‡³ðŸ‡¬' },
  { code: '+1', country: 'United States', flag: 'ðŸ‡ºðŸ‡¸' },
  { code: '+1', country: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦' },
  { code: '+44', country: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§' },
  { code: '+49', country: 'Germany', flag: 'ðŸ‡©ðŸ‡ª' },
  { code: '+33', country: 'France', flag: 'ðŸ‡«ðŸ‡·' },
  { code: '+39', country: 'Italy', flag: 'ðŸ‡®ðŸ‡¹' },
  { code: '+34', country: 'Spain', flag: 'ðŸ‡ªðŸ‡¸' },
  { code: '+31', country: 'Netherlands', flag: 'ðŸ‡³ðŸ‡±' },
  { code: '+32', country: 'Belgium', flag: 'ðŸ‡§ðŸ‡ª' },
  { code: '+41', country: 'Switzerland', flag: 'ðŸ‡¨ðŸ‡­' },
  { code: '+43', country: 'Austria', flag: 'ðŸ‡¦ðŸ‡¹' },
  { code: '+45', country: 'Denmark', flag: 'ðŸ‡©ðŸ‡°' },
  { code: '+46', country: 'Sweden', flag: 'ðŸ‡¸ðŸ‡ª' },
  { code: '+47', country: 'Norway', flag: 'ðŸ‡³ðŸ‡´' },
  { code: '+358', country: 'Finland', flag: 'ðŸ‡«ðŸ‡®' },
  { code: '+351', country: 'Portugal', flag: 'ðŸ‡µðŸ‡¹' },
  { code: '+30', country: 'Greece', flag: 'ðŸ‡¬ðŸ‡·' },
  { code: '+48', country: 'Poland', flag: 'ðŸ‡µðŸ‡±' },
  { code: '+420', country: 'Czech Republic', flag: 'ðŸ‡¨ðŸ‡¿' },
  { code: '+36', country: 'Hungary', flag: 'ðŸ‡­ðŸ‡º' },
  { code: '+40', country: 'Romania', flag: 'ðŸ‡·ðŸ‡´' },
  { code: '+359', country: 'Bulgaria', flag: 'ðŸ‡§ðŸ‡¬' },
  { code: '+385', country: 'Croatia', flag: 'ðŸ‡­ðŸ‡·' },
  { code: '+386', country: 'Slovenia', flag: 'ðŸ‡¸ðŸ‡®' },
  { code: '+421', country: 'Slovakia', flag: 'ðŸ‡¸ðŸ‡°' },
  { code: '+370', country: 'Lithuania', flag: 'ðŸ‡±ðŸ‡¹' },
  { code: '+371', country: 'Latvia', flag: 'ðŸ‡±ðŸ‡»' },
  { code: '+372', country: 'Estonia', flag: 'ðŸ‡ªðŸ‡ª' },
  { code: '+353', country: 'Ireland', flag: 'ðŸ‡®ðŸ‡ª' },
  { code: '+356', country: 'Malta', flag: 'ðŸ‡²ðŸ‡¹' },
  { code: '+357', country: 'Cyprus', flag: 'ðŸ‡¨ðŸ‡¾' },
  { code: '+352', country: 'Luxembourg', flag: 'ðŸ‡±ðŸ‡º' },
  { code: '+91', country: 'India', flag: 'ðŸ‡®ðŸ‡³' },
  { code: '+86', country: 'China', flag: 'ðŸ‡¨ðŸ‡³' },
  { code: '+81', country: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ' },
  { code: '+82', country: 'South Korea', flag: 'ðŸ‡°ðŸ‡·' },
  { code: '+61', country: 'Australia', flag: 'ðŸ‡¦ðŸ‡º' },
  { code: '+64', country: 'New Zealand', flag: 'ðŸ‡³ðŸ‡¿' },
  { code: '+27', country: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦' },
  { code: '+55', country: 'Brazil', flag: 'ðŸ‡§ðŸ‡·' },
  { code: '+52', country: 'Mexico', flag: 'ðŸ‡²ðŸ‡½' },
  { code: '+54', country: 'Argentina', flag: 'ðŸ‡¦ðŸ‡·' },
  { code: '+56', country: 'Chile', flag: 'ðŸ‡¨ðŸ‡±' },
  { code: '+57', country: 'Colombia', flag: 'ðŸ‡¨ðŸ‡´' },
  { code: '+51', country: 'Peru', flag: 'ðŸ‡µðŸ‡ª' },
  { code: '+58', country: 'Venezuela', flag: 'ðŸ‡»ðŸ‡ª' },
  { code: '+593', country: 'Ecuador', flag: 'ðŸ‡ªðŸ‡¨' },
  { code: '+595', country: 'Paraguay', flag: 'ðŸ‡µðŸ‡¾' },
  { code: '+598', country: 'Uruguay', flag: 'ðŸ‡ºðŸ‡¾' },
];

// Interface for component props
interface CountrySelectorProps {
  value: string;
  onChange: (country: string) => void;
  onBlur?: () => void;
  error?: string;
  touched?: boolean;
  disabled?: boolean;
  placeholder?: string;
  className?: string;
  id?: string;
  name?: string;
}

/**
 * Country Selector Component
 * Provides a dropdown interface for selecting countries with flags
 */
const CountrySelector: React.FC<CountrySelectorProps> = ({
  value,
  onChange,
  onBlur,
  error,
  touched,
  disabled = false,
  placeholder = "Select your country",
  className = "",
  id,
  name
}) => {
  // Component state for dropdown visibility
  const [showDropdown, setShowDropdown] = useState(false);

  // Close dropdown when clicking outside
  useEffect(() => {
    const handleClickOutside = () => {
      if (showDropdown) {
        setShowDropdown(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [showDropdown]);

  /**
   * Handles country selection from dropdown
   */
  const handleCountrySelect = (country: string) => {
    onChange(country);
    setShowDropdown(false);
    if (onBlur) {
      onBlur();
    }
  };

  // Find selected country for display
  const selectedCountry = COUNTRY_CODES.find(c => c.country === value);

  return (
    <div className="relative">
      <button
        type="button"
        id={id}
        name={name}
        onClick={() => !disabled && setShowDropdown(!showDropdown)}
        onBlur={onBlur}
        disabled={disabled}
          'w-full flex items-center justify-between px-4 py-3 border rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 transition-colors text-left outline-none',
          error && touched ? 'border-red-300' : 'border-gray-300',
          disabled ? 'bg-gray-100 cursor-not-allowed' : 'bg-white hover:bg-gray-50',
          className
        )}
        aria-invalid={error && touched ? true : false}
        aria-describedby={error && touched ? `${id}-error` : undefined}
      >
        <div className="flex items-center gap-3">
          {selectedCountry ? (
            <>
{{ ... }}
    </div>
  );
};

export default CountrySelector;
